Can’t expect 10x engineer to always be a miracle worker

(This story originally appeared in on Aug 13, 2019)

MUMBAI: Any talk of the rockstar in the room has always split the tech community. And it did again when Accel Ventures partner Shekhar Kirani issued a tweet thread last month highly recommending the rockstar 10x engineer, especially for startups. Many in the industry, including in Silicon Valley , were riled.A 10x engineer is one who can cram in several hours of work, more than an average engineer, with 10 times their productivity. S/he has a rich tool set of techniques for everything from front-end to back-end, and learns new frameworks and languages ahead of others. S/he knows how to apply these in the right context. And, as Kirani put it, knows every line of code that has gone into production, and if a quality assurance or support person alerts an issue, knows precisely where the fault (or bug) is and can fix the same in hours, versus days that ordinary engineers would take.Kirani said a 10x engineer increases the odds of a startup’s success. Many believe that. Software-as a-service venture Clappia says it has four 10x engineers and pays them double or triple the salary it pays other engineers. “In early-stage startups, where founders would generally be busy in acquiring customers or investment, these techies who can work as individual contributors are assets. They also have foresight while developing the product, rather than just focus on the current issue,” says Clappia CEO Ashutosh Kumar.Subhendu Panigrahi, founder of Skillenza, an HR firm that hires through hackathons, says they are currently calling out 10x engineers for a month-long hackathon challenge. “One can spot the 10x engineer when he walks in as an individual participant and cracks the challenge that teams take longer to solve,” he says. But 10x engineers also have plenty of critics. Kirani’s tweet was met with a barrage of them. One said he is describing the “brilliant jerks that the rest of us spend our careers cleaning up after”. The suggestion was that these engineers have poor team skills and are unwilling to document code or mentor others. So, often when they leave, others have to figure out everything from the beginning.New York-based developer Aaditya Talwani, who took on Kirani on Twitter, told TOI: “The best software products are built through collaboration, and engineers that are poor collaborators should not be celebrated, even if they seem efficient on the surface.” Gaurav Kamboj, a cloud architect with Hotstar, says a 10x engineer may get your work done, but that’s not enough. “Rohit Sharma can keep hitting a century but if the bowlers don’t perform, then India will lose,” he says.Kamal Karanth, CEO of HR firm Xpheno, says there’s demand for 10x engineers, but cautions that they exhibit maverick behaviour, “which is not good for a company that relies on teams”. And then there are those who think a 10x engineer is a mythical creature. A Chennai-based software entrepreneur, who did not want to be named, says the 10x engineer Kirani describes exists mainly in movies, like Hugh Jackman in Swordfish. And to the extent there is a brilliant loner, the person will usually develop code that will not scale. “It will work for a given value of work. However, to handle scalable code, you need to work with others. So I’ll have a conscientious, dedicated team of 10 1x developers to a 10x developer any day,” he says.Bharani Subramaniam, market technology principal in software consulting company ThoughtWorks , also says the 10x engineer is more myth than reality. He notes that the term 10x is typically associated with time — how quickly can the engineer complete tasks. In reality, a huge percentage of that time is spent in getting a handle of the context, domain, and understanding the problem statement. “This is reason to believe that effective communication is the real black hole that sucks in a significant portion of time when it comes to software development. When context is established, accelerated development is a matter of familiarity with tools, platforms and framework — capabilities that every engineer should consistently sharpen,” Subramaniam says.
